<journal>
<header><title>One Ring?</title><date>2004-08-16</date></header>
<entry>
    <p>I've gotten some heat about my posts on <a href="575.html">a thousand points of light</a> and <a href="576.html">more light</a>. For example, a Jabber friend of mine pointed me to a <a href="http://psi.affinix.com/forums/index.php?act=ST&amp;f=1&amp;t=1974&amp;hl=&amp;s=46ecd78d2f9d6461b890b5ef45ae1a86">thread</a> over at the <a href="http://psi.affinix.coml/">Psi</a> forums in which someone claimed that I am calling for "one client to rule them all". Far from it. What I'm calling for is the development of a reference implementation, which Wikipedia <a href="http://en.wikipedia.org/wiki/Reference_implementation">defines</a> as "a software example of a standard for use in helping others implement their own versions of the standard". One reason for developing a reference implementation is to make it easier for others to develop their own implementations, which is why I think Python would be the best language in which to write the reference implementation (Python is relatively easy to learn, easy to read, easy to understand &mdash; at least compared to, say, C++). A reference implementation of the Jabber/XMPP protocols won't necessarily be production-quality on the server side or especially slick on the client side &mdash; it <em>might</em> be, but that's not the primary point. I still firmly believe in <a href="http://en.wikipedia.org/wiki/Hundred_Flowers_Campaign">letting a hundred flowers bloom</a> and the free marketplace of code. But we need to make it easier for developers to create implementations of protocols such as <a href="http://www.jabber.org/jeps/jep-0050.html">Ad-Hoc Commands</a>, <a href="http://www.jabber.org/jeps/jep-0065.html">SOCKS5 Bytestreams</a>, and the stringprep profiles defined in <a href="http://www.jabber.org/ietf/draft-ietf-xmpp-core-24.html">XMPP Core</a>. It seems to me that reference implementations (server, client, and library) could go a long way toward making that a reality.</p>
</entry>
</journal>
