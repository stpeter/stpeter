<journal>
<header><title>Pubsub Adoption</title><date>2007-08-10</date></header>
<entry>
<p>The other day <a href="http://ompka.net/blog/">Piers Harding</a> asked me why XMPP <a href="https://www.xmpp.org/extensions/xep-0060.html">publish-subscribe</a> technologies haven't taken off yet. Since Piers was at the 2002 meeting in Munich where we had some lengthy discussions about pubsub, he knows that pubsub has long been a contentious issue (e.g., it took us a long time to make peace between those who wanted to do event notifications only and those who wanted to persist items for later retrieval).</p>
<p>Here are some possible reasons:</p>
<ol><li>Pubsub is not an IM technology -- and we have a hard enough time getting client and server developers to implement those!</li><li>The basic concept behind pubsub is simple, but the spec is long and complicated because there are so many optional features and alternate flows in the use cases. I've tried to simplify the spec and will put some more work into that over the next week or two (e.g., by adding a friendly "How It Works" section).</li>
<li>There still is no "killer app" for pubsub. Possible applications include real-time RSS feeds (actually <a href="https://www.xmpp.org/internet-drafts/draft-saintandre-atompub-notify-05.html">Atom</a>) and social presence &#xE0; la <a href="http://www.twitter.com/">Twitter</a> and <a href="http://www.jaiku.com/">Jaiku</a>.</li></ol><p>I suppose we were ahead of our time by working on pubsub back in 2001 and 2002. But that's not uncommon. As I like to put it, we build the runway and we make it as long and smooth as we can; what kind of aircraft you build and where you fly the plane are up to you. :)</p>
</entry>
</journal>
